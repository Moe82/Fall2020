# -*- coding: utf-8 -*-
"""MohamedShafee.056

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m5QV6gbNXBCrot0Qz-2mL11pzZqJaRH0
"""

# import libraries 
import numpy as np
from sklearn.datasets import fetch_openml
from sklearn.model_selection import cross_val_score
from sklearn.metrics import f1_score
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
from sklearn import svm
from sklearn.svm import SVC
from sklearn.multiclass import OneVsRestClassifier

# fetch the data set
mnist = fetch_openml('mnist_784', version=1)

# create test and training sets
X, y = mnist["data"], mnist["target"] 
X.shape
X_train, X_test, y_train, y_test = X[:60000], X[60000:], y[:60000], y[60000:]

parameters = {
    'estimator__kernel': ['poly','rbf'], 
    'estimator__gamma': np.logspace(0, 1, 10),
    'estimator__C': np.logspace(-3, 3, 7)
    }

grid_search = GridSearchCV(OneVsRestClassifier(SVC()), param_grid=parameters, scoring = 'accuracy')

grid_search.fit(X_train[:1000], y_train[:1000])

print (grid_search.best_score_)
print (grid_search.best_params_)

best_kernel = grid_search.best_params_.get('estimator__kernel')
best_gamma = grid_search.best_params_.get('estimator__gamma')
best_C = grid_search.best_params_.get('estimator__C')

clf = OneVsRestClassifier(SVC(kernel=best_kernel, gamma=best_gamma, C=best_C))
clf.fit(X_train, y_train)
predictions = clf.predict(X_test)
accuracy = accuracy_score(y_true=y_test, y_pred=predictions)
print ("Accuracy: " + str(accuracy * 100) + "%")